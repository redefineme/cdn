{
  "swagger" : "2.0",
  "info" : {
    "description" : "Hyperledger Fabric CA Server APIs provides certificate authority services for the blockchain.",
    "version" : "0.7.0",
    "title" : "Fabric CA Server API",
    "contact" : { }
  },
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/info" : {
      "get" : {
        "tags" : [ "fabric-ca-server" ],
        "description" : "Get server information.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved server information",
            "schema" : {
              "required" : [ "Errors", "Messages", "Result", "Success" ],
              "type" : "object",
              "properties" : {
                "Success" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if the request was successful."
                },
                "Result" : {
                  "type" : "object",
                  "properties" : {
                    "caname" : {
                      "type" : "string",
                      "description" : "The name of the root CA associated with this server."
                    },
                    "cachain" : {
                      "type" : "string",
                      "description" : "Base 64 encoded PEM-encoded certificate chain of the server's signing certificate."
                    }
                  }
                },
                "Errors" : {
                  "type" : "array",
                  "description" : "A array of error messages (i.e. code and string messages).",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of error."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "An error message"
                      }
                    }
                  }
                },
                "Messages" : {
                  "type" : "array",
                  "description" : "A array of informational messages (i.e. code and string messages).",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of message."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "A more specific message."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/enroll" : {
      "post" : {
        "tags" : [ "fabric-ca-server" ],
        "description" : "Enroll a new identity and return an enrollment certificate.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "An HTTP basic authorization header where:  \n*  *user* is the enrollment ID;  \n*  *password* is the enrollment secret."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "request" ],
            "properties" : {
              "request" : {
                "type" : "string",
                "description" : "A PEM-encoded string containing the CSR (Certificate Signing Request) based on PKCS #10."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully enrolled a new identity",
            "schema" : {
              "required" : [ "Errors", "Messages", "Result", "Success" ],
              "type" : "object",
              "properties" : {
                "Success" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if the request was successful."
                },
                "Result" : {
                  "type" : "string",
                  "description" : "The enrollment certificate in base 64 encoded format."
                },
                "Errors" : {
                  "type" : "array",
                  "description" : "A array of error messages (i.e. code and string messages).",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of error."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "An error message"
                      }
                    }
                  }
                },
                "Messages" : {
                  "type" : "array",
                  "description" : "A array of informational messages (i.e. code and string messages).",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of message."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "A more specific message."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reenroll" : {
      "post" : {
        "tags" : [ "fabric-ca-server" ],
        "description" : "Reenroll an enrollment certificate.  This is useful for renewing an enrollment certificate before it expires or because it has been compromised.\n",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "An enrollment token consisting of two base 64 encoded parts separated by a period:   \n* an enrollment certificate;   \n* a signature over the certificate and body of request."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "request" ],
            "properties" : {
              "request" : {
                "type" : "string",
                "description" : "A PEM-encoded string containing the CSR (Certificate Signing Request) based on PKCS #10."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully registered identity",
            "schema" : {
              "required" : [ "Errors", "Messages", "Result", "Success" ],
              "type" : "object",
              "properties" : {
                "Success" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if the request was successful."
                },
                "Result" : {
                  "type" : "string",
                  "description" : "The enrollment certificate in base 64 encoded format."
                },
                "Errors" : {
                  "type" : "array",
                  "description" : "A array of error messages (i.e. code and string messages).",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of error."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "An error message"
                      }
                    }
                  }
                },
                "Messages" : {
                  "type" : "array",
                  "description" : "A array of informational messages (i.e. code and string messages).",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of message."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "A more specific message."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "fabric-ca-server" ],
        "description" : "Register a new identity with the Fabric CA server.   \nAn enrollment secret is returned which can then be used, along with the enrollment ID, to enroll a new identity.   \nThe caller must have **hf.Registrar** authority.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "An enrollment token consisting of two base 64 encoded parts separated by a period:   \n* an enrollment certificate;   \n* a signature over the certificate and body of request."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "affiliation_path", "attrs", "id", "type" ],
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The enrollment ID which uniquely identifies an identity"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the identity (e.g. *user*, *app*, *peer*, *orderer*, etc)"
              },
              "affiliation_path" : {
                "type" : "string",
                "description" : "The affiliation path of the new identity.\n"
              },
              "attrs" : {
                "type" : "array",
                "description" : "An array of attribute names and values to give to the registered identity.",
                "items" : {
                  "required" : [ "name", "value" ],
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Attribute name"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of attribute"
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully registered identity",
            "schema" : {
              "required" : [ "Errors", "Messages", "Result", "Success" ],
              "type" : "object",
              "properties" : {
                "Success" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if the request was successful."
                },
                "Result" : {
                  "required" : [ "credentials" ],
                  "type" : "object",
                  "properties" : {
                    "credentials" : {
                      "type" : "string",
                      "description" : "The base64 encoded enrollment secret of the newly registered identity."
                    }
                  }
                },
                "Errors" : {
                  "type" : "array",
                  "description" : "An array of error messages (code and message)",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of error."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "An error message"
                      }
                    }
                  }
                },
                "Messages" : {
                  "type" : "array",
                  "description" : "An array of information messages (code and message)",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of message."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "A more specific message."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/revoke" : {
      "post" : {
        "tags" : [ "fabric-ca-server" ],
        "description" : "Perform revocation of one of the following:  \n* a specific certificate identified by a serial number and AKI (Authority Key Identitifer), or   \n* all certificates associated with the identity and prevent any future enrollments for this identity.   \nThe caller must have the **hf.Revoker** attribute.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "An enrollment token consisting of two base 64 encoded parts separated by a period:   \n* an enrollment certificate;   \n* a signature over the certificate and body of request."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully completed the revocation",
            "schema" : {
              "required" : [ "Errors", "Messages", "Result", "Success" ],
              "type" : "object",
              "properties" : {
                "Success" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if the request was successful."
                },
                "Result" : {
                  "type" : "string",
                  "description" : "Message related to revocation"
                },
                "Errors" : {
                  "type" : "array",
                  "description" : "An array of error messages (code and message)",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of error."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "An error message"
                      }
                    }
                  }
                },
                "Messages" : {
                  "type" : "array",
                  "description" : "An array of information messages (code and message)",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of message."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "A more specific message."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tcert" : {
      "post" : {
        "tags" : [ "fabric-ca-server" ],
        "description" : "Get a batch of transaction certificates with optional attributes.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "An enrollment token consisting of two base 64 encoded parts separated by a period:   \n* an enrollment certificate;   \n* a signature over the certificate and body of request."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "attr_names", "count", "encrypt_attrs", "validity_period" ],
            "properties" : {
              "count" : {
                "type" : "integer",
                "description" : "The number of transaction certificates to return."
              },
              "attr_names" : {
                "type" : "array",
                "description" : "An array of The name of an attribute whose name and value to put in each transaction certificate. items",
                "items" : {
                  "type" : "string",
                  "description" : "The name of an attribute whose name and value to put in each transaction certificate."
                }
              },
              "encrypt_attrs" : {
                "type" : "boolean",
                "description" : "If true, encrypt the attribute(s) in each transaction certificate."
              },
              "validity_period" : {
                "type" : "integer",
                "description" : "The number of nanoseconds each transaction certificate will be valid before expiration."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a batch of transaction certificates.",
            "schema" : {
              "required" : [ "Errors", "Messages", "Result", "Success" ],
              "type" : "object",
              "properties" : {
                "Success" : {
                  "type" : "boolean",
                  "description" : "Boolean indicating if the request was successful."
                },
                "Result" : {
                  "required" : [ "id", "key", "tcerts", "ts" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Transaction batch identifier"
                    },
                    "ts" : {
                      "type" : "integer",
                      "description" : "Time stamp"
                    },
                    "key" : {
                      "type" : "string",
                      "description" : "Base 64 encoded key"
                    },
                    "tcerts" : {
                      "type" : "array",
                      "description" : "An array of transaction certificates",
                      "items" : {
                        "required" : [ "cert", "keys" ],
                        "type" : "object",
                        "properties" : {
                          "cert" : {
                            "type" : "string",
                            "description" : "Based 64 encoded transaction certificate"
                          },
                          "keys" : {
                            "type" : "array",
                            "description" : "An array of decryption keys, assuming encryption was enabled.",
                            "items" : {
                              "required" : [ "name", "value" ],
                              "type" : "object",
                              "properties" : {
                                "name" : {
                                  "type" : "string",
                                  "description" : "Attribute name"
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "Base 64 encoded symmetric key"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "Errors" : {
                  "type" : "array",
                  "description" : "An array of error messages (code and message)",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of error."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "An error message"
                      }
                    }
                  }
                },
                "Messages" : {
                  "type" : "array",
                  "description" : "An array of informational messages (code and message)",
                  "items" : {
                    "required" : [ "code", "message" ],
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "description" : "Integer code denoting the type of message."
                      },
                      "message" : {
                        "type" : "string",
                        "description" : "A more specific message."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}